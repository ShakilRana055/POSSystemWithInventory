using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using POSSystemWithInventory.ConstantAndHelpers;
using POSSystemWithInventory.Models;
using POSSystemWithInventory.RepositoryPattern.Interfaces.IUnitOfWork;

namespace POSSystemWithInventory.Controllers
{
    public class SalesInvoiceController : Controller
    {
        private readonly IUnitOfWork context;

        public SalesInvoiceController(IUnitOfWork unitOfWork)
        {
            context = unitOfWork;
        }
        public IActionResult Index()
        {
            var customerItems = context.Customer.GetAll().ToList();
            var productItems = context.Product.GetAll().ToList();
            var vatItems = context.VatAndTax.GetAll().ToList();
            SalesInvoiceVM salesInvoice = new SalesInvoiceVM()
            {
                CustomerItem = POSHelper.Customer(customerItems),
                ProductItem = POSHelper.Product(productItems),
                VatItem = POSHelper.VatAndTax(vatItems),
            };
            
            return View(salesInvoice);
        }
        public IActionResult SalesInvoiceList()
        {
            return View();
        }

        #region Actions and Helpers
        private string InvoiceNumber()
        {
            var lastSalesInvoice = context.SalesInvoice.GetLastOrDefault();
            string invoiceNumber = AutoGeneratedNumber.GetInvoiceNumber(lastSalesInvoice == null ? "1": lastSalesInvoice.InvoiceNumber);
            return invoiceNumber;
        }
        public IActionResult GetInvoiceNumber()
        {
            string invoiceNumber = InvoiceNumber();
            return Json(invoiceNumber);
        }
        public IActionResult GetInventory()
        {
            var inventory = context.Inventory.GetAllWithRelatedData().ToList();
            return Json(inventory);
        }
        #endregion
    }
}
